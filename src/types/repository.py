from typing import Iterable
from src.types.basic_types import User, Place


class Repository:
    def __init__(self, conn_url: str | None = None): ...

    def create_user(self, user: User) -> None: ...
    def get_all_users(self, quantity: int, off_set: int) -> Iterable[User]: ...
    def get_user_by_id(self, user_id: str) -> User: ...
    def update(self, user_id: str, data: User) -> None: ...
    def delete(self, user_id: str) -> None: ...

    def create_place(self, place: Place) -> None: ...
    def get_all_places(self) -> Iterable[Place]: ...
    def get_place_by_id(self, place_id: str) -> Place: ...
    def update_place(self, place_id: str, data: Place) -> None: ...
    def delete_place(self, place_id: str) -> None: ...
